Using System
Using System.Collections
Using System.ComponentModel
Using System.Data
Using System.Drawing
Using System.Text
Using System.Windows.Forms
Using System.IO 

DclNamespace dotnet_project

BegClass formMain Extends(System.Windows.Forms.Form) Access(*Public) Partial(*Yes)

	/region Default Constructor
	
	BegConstructor Access(*Public)
		//
		// Required for Windows Form Designer support
		//
		InitializeComponent()

		//
		// TODO: Add any constructor code after InitializeComponent call
		//
	EndConstructor

	/endregion

  //  DclFld ModalForm Type(formModal) New()
  //  DclFld NonModalForm Type(formNonModal) New()

    DclConst NONMODAL Value('1')
    DclConst MODAL Value('2')

	BegSr formMain_Load Access(*Private) Event(*this.Load)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

        DclFld BinaryPath Type(*String) 

        BinaryPath = AppDomain.CurrentDomain.BaseDirectory
        textboxNotes.Text = File.ReadAllText(BinaryPath + '\notes.txt') 

        PopulateComboBox()
	EndSr

    BegSr PopulateComboBox
        comboboxFormType.DisplayMember = 'Text'
        comboboxFormType.ValueMember = 'Value'
        comboboxFormType.Items.Add(*New ComboboxItem('Show', NONMODAL))
        comboboxFormType.Items.Add(*New ComboboxItem('ShowDialog', MODAL))
        comboboxFormType.SelectedIndex = 0
    EndSr

	BegSr formMain_FormClosing Access(*Private) Event(*this.FormClosing)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.Windows.Forms.FormClosingEventArgs)

	EndSr

	BegSr buttonDisplayForm_Click Access(*Private) Event(*this.buttonDisplayForm.Click)
		DclSrParm sender Type(*Object)
		DclSrParm e Type(System.EventArgs)

        DclFld SelectedItem Type(ComboboxItem)

        SelectedItem = comboboxFormType.SelectedItem *As ComboboxItem 
        If SelectedItem.Value = MODAL
            ShowModalForm()
        Else 
            ShowNonModalForm()
        EndIf  
	EndSr

    BegSr ShowNonModalForm
        DclFld NonModalForm Type(formNonModal) New()

        NonModalForm.Show()        
    EndSr

    BegSr ShowModalForm
        //DclFld ModalForm Type(formModal) New()
        DclFld dr Type(DialogResult) 

        dr = ModalForm.ShowDialog()
        If (dr = DialogResult.OK) 
            MsgBox 'OK was clicked'
        Else
            MsgBox 'Cancel was clicked'
        Endif 

        // Although it's [disputed](https://goo.gl/fRKJrQ) it's a good practice
        // to call a ShowDialog-displayed form's Dispose() before the form goes 
        // out of scope. 
        ModalForm.Dispose()
    EndSr
    	
EndClass

BegClass ComboboxItem

    DclProp Text Type(*String) Access(*Public)
    DclProp Value Type(*String) Access(*Public) 
    
    BegConstructor Access(*Public) 
        DclSrParm Text Type(*String) 
        DclSrParm Value Type(*String) 

        *This.Text = Text
        *This.Value = Value 
    EndConstructor  


EndClass 
